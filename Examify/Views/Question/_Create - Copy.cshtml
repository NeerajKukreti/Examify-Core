@model DataModel.QuestionModel
@{
    ViewBag.Title = "Create/Edit Question";
    Layout = null;
}


<style>
    .editor-container {
        height: 200px;
    }

    .ql-editor img {
        resize: both;
        overflow: auto;
        max-width: 100%;
        max-height: 500px; /* optional */
    }
</style>

<div class="toolbar1">
    <span class="ql-formats">
        <select class="ql-font"></select>
        <select class="ql-size"></select>
    </span>
    <span class="ql-formats">
        <button class="ql-bold"></button>
        <button class="ql-italic"></button>
        <button class="ql-underline"></button>
        <button class="ql-strike"></button>
    </span>
    <span class="ql-formats">
        <select class="ql-color"></select>
        <select class="ql-background"></select>
    </span>
    <span class="ql-formats">
        <button class="ql-script" value="sub"></button>
        <button class="ql-script" value="super"></button>
    </span>
    <span class="ql-formats">
        <button class="ql-header" value="1"></button>
        <button class="ql-header" value="2"></button>
        <button class="ql-blockquote"></button>
        <button class="ql-code-block"></button>
    </span>
    <span class="ql-formats">
        <button class="ql-list" value="ordered"></button>
        <button class="ql-list" value="bullet"></button>
        <button class="ql-indent" value="-1"></button>
        <button class="ql-indent" value="+1"></button>
    </span>
    <span class="ql-formats">
        <button class="ql-direction" value="rtl"></button>
        <select class="ql-align"></select>
    </span>
    <span class="ql-formats">
        <button class="ql-link"></button>
        <button class="ql-image"></button>
        @* <button class="ql-video"></button> *@
        <button class="ql-formula"></button>
    </span>
    <span class="ql-formats">
</div>

<form asp-action="Edit" method="post">
    <input type="hidden" asp-for="QuestionId" />
    <div class="form-group">
        <div class="editor-container" id="editor-question-english"></div>
    </div>
    <div class="form-group">
        <label>Question Hindi</label>
       
        <div class="editor-container" id="editor-question-hindi"></div>
        <span asp-validation-for="QuestionHindi" class="text-danger"></span>
    </div>
@*     <div class="form-group">
        <label>Additional Text English</label>
        <div class="editor-container" id="editor-additional-english"></div>
    </div>
    <div class="form-group">
        <label>Additional Text Hindi</label>
        <div class="editor-container" id="editor-additional-hindi"></div>
    </div>
    <div class="form-group">
        <label>Explanation</label>
        <textarea asp-for="Explanation" class="form-control"></textarea>
    </div>
    <div class="form-group">
        <label>Question Type</label>
        <select asp-for="QuestionTypeId" class="form-control" id="ddlQuestionType">
            <option value="">Select Type</option>
        </select>
    </div>
    <div class="form-group">
        <label>Subject</label>
        <select class="form-control" id="ddlSubject">
            <option value="">Select Subject</option>
        </select>
    </div>
    <div class="form-group">
        <label>Topic</label>
        <select asp-for="TopicId" class="form-control" id="ddlTopic">
            <option value="">Select Topic</option>
        </select>
    </div>
    <div class="form-group">
        <label>Multi Select</label>
        <input asp-for="IsMultiSelect" type="checkbox" />
    </div>
    <div class="form-group">
        <label>Option 1</label>
        <div id="editor-option-1"></div>
    </div>
    <div class="form-group">
        <label>Option 2</label>
        <div id="editor-option-2"></div>
    </div>
    <div class="form-group">
        <label>Option 3</label>
        <div id="editor-option-3"></div>
    </div>
    <div class="form-group">
        <label>Option 4</label>
        <div id="editor-option-4"></div>
    </div> *@
</form>
<script src="https://cdn.jsdelivr.net/npm/katex@0.16.8/dist/katex.min.js"></script>
<script src="@Url.Content("~/scripts/custom/questionbank/question.js")"></script>

<script>
    // Register resize module
    var toolbarOptions = [
        ['bold', 'italic', 'underline', 'strike'],        // toggled buttons
        ['blockquote', 'code-block'],
        ['link', 'image'],
        [{ 'list': 'ordered'}, { 'list': 'bullet' }],
        [{ 'script': 'sub'}, { 'script': 'super' }],      // superscript/subscript
        [{ 'indent': '-1'}, { 'indent': '+1' }],          // outdent/indent
        [{ 'direction': 'rtl' }],                         // text direction
        [{ 'header': [1, 2, 3, 4, 5, 6, false] }],
        [{ 'color': [] }, { 'background': [] }],          // dropdown with defaults
        [{ 'font': [] }],
        [{ 'align': [] }],
        ['clean']                                         // remove formatting
    ];

    var quillEditors = {};

    Quill.register('modules/imageResize', window.ImageResize.default);

    var i = 0
    $('.editor-container').each(function() {
    var editorId = $(this).attr('id');
    
    
    quillEditors[editorId]  = new Quill('#' + editorId, {
      theme: 'snow',
      debug: 'info',
        placeholder: 'Compose a question...',
      modules: {
        toolbar: {
          container: ".toolbar1" 
        },
        imageResize: {
        modules: ['Resize', 'DisplaySize', 'Toolbar'],
        preserveRatio: false,
        handleStyles: {
          topLeft: { cursor: 'nwse-resize' },
          topRight: { cursor: 'nesw-resize' },
          bottomLeft: { cursor: 'nesw-resize' },
          bottomRight: { cursor: 'nwse-resize' }
        }
        }//, formula: true
    }});
    });
    // Custom image upload handler
    function imageHandler() {
      const input = document.createElement('input');
      input.setAttribute('type', 'file');
      input.setAttribute('accept', 'image/*');
      input.click();

      input.onchange = async () => {
        const file = input.files[0];
        if (file) {
          const formData = new FormData();
          formData.append('file', file);

          // ⚡ Replace this with your API endpoint
          const response = await fetch('/Question/uploads', {
            method: 'POST',
            body: formData
          });

          const data = await response.json();
          const range = quill.getSelection();
          // Insert uploaded image URL
          quill.insertEmbed(range.index, 'image', data.url);
        }
      };
    }

    // Example save
    function saveData() {
      const content = quill.root.innerHTML;
      console.log("Editor content:", content);
      alert("Saved content:\n" + content);
    }
</script>

